@startuml テスト
'クラス定義'
abstract class ユーザー {
    - ユーザーID
    - パスワード
    + ログイン()
}

class 学生 {
    - 名前
    - 学生ID
    - 所属学科
    + 履修登録する()
    + 履修削除する()
    + 時間割を確認する()
    + 成績を確認する()
}

class 教員 {
    - 名前
    - 教員ID
    + 成績報告する()
    + 成績督促する()
}

class 科目 {
    - 科目コード
    - 科目名
    - 担当教員
    - 単位数
}

class 必修{
    - 科目コード
    - 科目名
    - 担当教員
    - 単位数
    - 学期
    - 曜日
    - 時間
}

class 選択必修{
    - 科目コード
    - 科目名
    - 担当教員
    - 単位数
    - 学期
    - 曜日
    - 時間  
}

class 選択{
    - 科目コード
    - 科目名
    - 担当教員
    - 単位数
    - 学期
    - 曜日
    - 時間
}

class 履修 {
    - 履修番号
    - 学生ID
    - 科目コード
    - 学期
    + 履修登録する()
    + 履修削除する()
}

class 成績 {
    - 点数
    - 成績ステータス
    + 成績を保存する()
    + 成績を提出する()
}

class 未登録{

}

class 仮登録{

}

class 本登録{

}

class 時間割 {
    - 学期
    - 時間割番号
    + 時間割を生成する()
}

class 成績報告 {
    + 成績報告オプションを選択する()
    + 科目一覧を表示する()
    + 履修者一覧を表示する()
    + 成績を保存する()
    + 成績を提出する()
    + エラーチェックを行う()
}

class メール通知 {
    + 履修を促す()
    + 成績報告督促を送信する()
    + 成績報告期限通知を送信する()
}

'クラスの関連付け'
ユーザー <|-down- 学生
ユーザー <|-down- 教員

学生 "1" --> "*" 履修 : 登録する
学生 "1" --> "1" 時間割 : 確認する
学生 "1" --> "1" 成績 : 確認する

教員 "1" --> "*" 科目 : 担当する
教員 "1" --> "*" 成績 : 報告する
教員 "1" --> "0..*" メール通知 : 受け取る

科目 "1" --> "*" 履修 : 管理する
科目 "1" --> "0..*" 成績 : 管理する

履修 "1" --> "1" 成績 : 含む
履修 "1" --> "1" 科目 : 対象とする
履修 "1" --> "1" 時間割 : 管理する

成績報告 "1" --> "*" 成績 : 管理する
成績報告 "1" --> "*" 科目 : 操作する
成績報告 "1" --> "*" 履修 : 操作する
成績報告 "1" --> "*" メール通知 : 通知を管理する

科目 <|-- 必修
科目 <|-- 選択必修
科目 <|-- 選択

成績 <|-- 未登録
成績 <|-- 仮登録
成績 <|-- 本登録
@enduml
